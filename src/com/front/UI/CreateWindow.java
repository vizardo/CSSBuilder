package com.front.UI;

import com.Utility.StyleRule;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.ButtonModel;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Vishnuprasad
 */
public class CreateWindow extends javax.swing.JFrame {

    /**
     * Creates new form CreateWindow
     */
    public CreateWindow() {
        initComponents();

        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);

        /*
         * Making window appear in the center of the screen.
         * solution implemented as found in-
         * http://stackoverflow.com/questions/2442599/how-to-set-jframe-to-appear-centered-regardless-of-the-monitor-resolution
         *  given by user Jack:
         * http://stackoverflow.com/users/121747/jack
         * 
         * 
         */


        CreateWindowFlag = false;
        ruleList = new ArrayList();
        if (!dataLoaded) {
            classes = new ArrayList();
            IDs = new ArrayList();
            Elements = new ArrayList();
        }
        group = new ButtonGroup();
        group.add(IDRadio);
        group.add(ClassRadio);

        ClassCombo.removeAllItems();
        IDsComboBox.removeAllItems();
        this.getContentPane().setBackground(new java.awt.Color(158, 252, 151));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        HTMLTags = new javax.swing.JComboBox();
        IDsComboBox = new javax.swing.JComboBox();
        ClassCombo = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        HTMLElementSprtBtn = new javax.swing.JButton();
        HTMLElementChldBtn = new javax.swing.JButton();
        IDElementChldBtn = new javax.swing.JButton();
        IDAddsprtBtn = new javax.swing.JButton();
        ClassElementSprtBtn = new javax.swing.JButton();
        ClassElementChldBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        stylesAddedTxtArea = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        createNewRuleBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        AllStylesTxtArea = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        IDClassCreateTxtBox = new javax.swing.JTextField();
        IDRadio = new javax.swing.JRadioButton();
        ClassRadio = new javax.swing.JRadioButton();
        IDClassCreateBtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        link = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CSS Builder");
        setBackground(new java.awt.Color(102, 255, 102));
        setForeground(new java.awt.Color(51, 255, 51));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        HTMLTags.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        HTMLTags.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                HTMLTagsItemStateChanged(evt);
            }
        });
        HTMLTags.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HTMLTagsActionPerformed(evt);
            }
        });
        HTMLTags.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                HTMLTagsFocusLost(evt);
            }
        });

        IDsComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        IDsComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                IDsComboBoxItemStateChanged(evt);
            }
        });
        IDsComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDsComboBoxActionPerformed(evt);
            }
        });

        ClassCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ClassCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ClassComboItemStateChanged(evt);
            }
        });
        ClassCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClassComboActionPerformed(evt);
            }
        });

        jLabel1.setText("HTML selector");

        jLabel2.setText("ID's");

        jLabel3.setText("Classes");

        HTMLElementSprtBtn.setText("Add as Seperate");
        HTMLElementSprtBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HTMLElementSprtBtnActionPerformed(evt);
            }
        });

        HTMLElementChldBtn.setText("Add as Child");
        HTMLElementChldBtn.setEnabled(false);
        HTMLElementChldBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HTMLElementChldBtnActionPerformed(evt);
            }
        });

        IDElementChldBtn.setText("Add as Child");
        IDElementChldBtn.setEnabled(false);
        IDElementChldBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDElementChldBtnActionPerformed(evt);
            }
        });

        IDAddsprtBtn.setText("Add as Seperate");
        IDAddsprtBtn.setEnabled(false);
        IDAddsprtBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDAddsprtBtnActionPerformed(evt);
            }
        });

        ClassElementSprtBtn.setText("Add as Seperate");
        ClassElementSprtBtn.setEnabled(false);
        ClassElementSprtBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClassElementSprtBtnActionPerformed(evt);
            }
        });

        ClassElementChldBtn.setText("Add as Child");
        ClassElementChldBtn.setEnabled(false);
        ClassElementChldBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClassElementChldBtnActionPerformed(evt);
            }
        });

        stylesAddedTxtArea.setColumns(20);
        stylesAddedTxtArea.setRows(5);
        stylesAddedTxtArea.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                stylesAddedTxtAreaInputMethodTextChanged(evt);
            }
        });
        jScrollPane1.setViewportView(stylesAddedTxtArea);

        jLabel4.setText("Styles Added");

        createNewRuleBtn.setText("Create New Style");
        createNewRuleBtn.setEnabled(false);
        createNewRuleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createNewRuleBtnActionPerformed(evt);
            }
        });

        AllStylesTxtArea.setColumns(20);
        AllStylesTxtArea.setRows(5);
        jScrollPane2.setViewportView(AllStylesTxtArea);

        jLabel5.setText("All Styles ");

        jLabel6.setText("Add Item");

        jLabel7.setText("Name");

        IDClassCreateTxtBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDClassCreateTxtBoxActionPerformed(evt);
            }
        });

        IDRadio.setText("ID");
        IDRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDRadioActionPerformed(evt);
            }
        });

        ClassRadio.setText("Class");
        ClassRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClassRadioActionPerformed(evt);
            }
        });

        IDClassCreateBtn.setText("CREATE");
        IDClassCreateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDClassCreateBtnActionPerformed(evt);
            }
        });

        jButton1.setText("WRITE TO FILE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("DONE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(67, 67, 67)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(IDClassCreateTxtBox, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(IDRadio)
                                            .addComponent(ClassRadio))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(IDClassCreateBtn)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(ClassCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(ClassElementSprtBtn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(ClassElementChldBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(IDsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(IDAddsprtBtn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(IDElementChldBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(HTMLTags, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(HTMLElementSprtBtn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(HTMLElementChldBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(28, 28, 28)
                                        .addComponent(jLabel6))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(createNewRuleBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jScrollPane1)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(link, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {HTMLElementChldBtn, HTMLElementSprtBtn});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {IDAddsprtBtn, IDElementChldBtn});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(HTMLTags, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HTMLElementSprtBtn)
                            .addComponent(HTMLElementChldBtn))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(IDsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(IDAddsprtBtn)
                            .addComponent(IDElementChldBtn))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ClassCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ClassElementSprtBtn)
                            .addComponent(ClassElementChldBtn)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(createNewRuleBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(11, 11, 11)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(IDClassCreateTxtBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(IDRadio)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(ClassRadio)
                                    .addComponent(IDClassCreateBtn))))
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(link)
                        .addGap(0, 14, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void HTMLElementSprtBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HTMLElementSprtBtnActionPerformed
        stylesAddedTxtArea.append(HTMLTags.getSelectedItem().toString() + ",");
    }//GEN-LAST:event_HTMLElementSprtBtnActionPerformed

    private void IDAddsprtBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDAddsprtBtnActionPerformed
        stylesAddedTxtArea.append("#" + IDsComboBox.getSelectedItem().toString() + ",");
    }//GEN-LAST:event_IDAddsprtBtnActionPerformed

    private void ClassElementSprtBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClassElementSprtBtnActionPerformed
        stylesAddedTxtArea.append("." + ClassCombo.getSelectedItem().toString() + ",");
    }//GEN-LAST:event_ClassElementSprtBtnActionPerformed

    private void createNewRuleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createNewRuleBtnActionPerformed
        String title[] = new String[1];
        title[0] = stylesAddedTxtArea.getText();
        stylesAddedTxtArea.setText("");
        if (title[0].endsWith(",")) {
            title[0] = title[0].substring(0, title[0].length() - 1);
        }
        EditWindow.main(title);


    }//GEN-LAST:event_createNewRuleBtnActionPerformed

    public static void setAllStylesTxtArea(String text) {
        AllStylesTxtArea.append(text);
    }

    private void IDClassCreateTxtBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDClassCreateTxtBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IDClassCreateTxtBoxActionPerformed

    private void IDClassCreateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDClassCreateBtnActionPerformed
        String name;
        if (ClassRadio.isSelected()) {
            name = IDClassCreateTxtBox.getText();
            if (name == null || name.equals("")) {
                return;
            } else {
                classes.add("." + IDClassCreateTxtBox.getText());
                fillClassesCombo();
            }
        } else {
            name = IDClassCreateTxtBox.getText();
            if (name == null || name.equals("")) {
                return;
            } else {
                IDs.add("#" + IDClassCreateTxtBox.getText());
                fillIDsCombo();
            }

        }

        IDClassCreateTxtBox.setText("");
    }//GEN-LAST:event_IDClassCreateBtnActionPerformed

    public static boolean isCreateWindowFlag() {
        return CreateWindowFlag;
    }

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            // TODO add your handling code here:
            fillTagsCombo(dataLoaded);
            populateClassesCombo(dataLoaded);
        } catch (IOException ex) {
            Logger.getLogger(CreateWindow.class.getName()).log(Level.SEVERE, null, ex);
        }




        stylesAddedTxtArea.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {

                if (stylesAddedTxtArea.getText() == null || stylesAddedTxtArea.getText().equals("")) {
                    HTMLElementChldBtn.setEnabled(false);
                    IDElementChldBtn.setEnabled(false);
                    ClassElementChldBtn.setEnabled(false);
                    createNewRuleBtn.setEnabled(false);
                } else {
                    HTMLElementChldBtn.setEnabled(true);
                    if (IDsPresent) {
                        IDElementChldBtn.setEnabled(true);
                    }
                    if (classesPresent) {
                        ClassElementChldBtn.setEnabled(true);
                    }
                    createNewRuleBtn.setEnabled(true);
                }
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                if (stylesAddedTxtArea.getText() == null || stylesAddedTxtArea.getText().equals("")) {
                    HTMLElementChldBtn.setEnabled(false);
                    IDElementChldBtn.setEnabled(false);
                    ClassElementChldBtn.setEnabled(false);
                    createNewRuleBtn.setEnabled(false);
                } else {
                    HTMLElementChldBtn.setEnabled(true);
                    if (IDsPresent) {
                        IDElementChldBtn.setEnabled(true);
                    }
                    if (classesPresent) {
                        ClassElementChldBtn.setEnabled(true);
                    }
                    createNewRuleBtn.setEnabled(true);
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                if (stylesAddedTxtArea.getText() == null || stylesAddedTxtArea.getText().equals("")) {
                    HTMLElementChldBtn.setEnabled(false);
                    IDElementChldBtn.setEnabled(false);
                    ClassElementChldBtn.setEnabled(false);
                    createNewRuleBtn.setEnabled(false);
                } else {
                    HTMLElementChldBtn.setEnabled(true);
                    if (IDsPresent) {
                        IDElementChldBtn.setEnabled(true);
                    }
                    if (classesPresent) {
                        ClassElementChldBtn.setEnabled(true);
                    }
                    createNewRuleBtn.setEnabled(true);
                }
            }
        });
    }//GEN-LAST:event_formWindowOpened

    private void IDRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDRadioActionPerformed
        // TODO add your handling code here:
        // ClassRadio.setSelected(false);
    }//GEN-LAST:event_IDRadioActionPerformed

    private void ClassRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClassRadioActionPerformed
        // TODO add your handling code here:
        // IDRadio.setSelected(false);
    }//GEN-LAST:event_ClassRadioActionPerformed

    private void stylesAddedTxtAreaInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_stylesAddedTxtAreaInputMethodTextChanged
    }//GEN-LAST:event_stylesAddedTxtAreaInputMethodTextChanged

    private void HTMLTagsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HTMLTagsActionPerformed
    }//GEN-LAST:event_HTMLTagsActionPerformed

    private void HTMLTagsFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_HTMLTagsFocusLost
    }//GEN-LAST:event_HTMLTagsFocusLost

    private void HTMLTagsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_HTMLTagsItemStateChanged
        /*  Object st=HTMLTags.getSelectedItem();
         if(st!=null)
         stylesAddedTxtArea.setText(st.toString()); */       // TODO add your handling code here:
    }//GEN-LAST:event_HTMLTagsItemStateChanged

    private void HTMLElementChldBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HTMLElementChldBtnActionPerformed
        String text = stylesAddedTxtArea.getText().trim();
        if (text.endsWith(",")) {
            stylesAddedTxtArea.setText(text.substring(0, text.length() - 1) + " ");
        }
        stylesAddedTxtArea.append(" " + HTMLTags.getSelectedItem().toString() + ",");
    }//GEN-LAST:event_HTMLElementChldBtnActionPerformed

    private void IDElementChldBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDElementChldBtnActionPerformed
        String text = stylesAddedTxtArea.getText().trim();
        if (text.endsWith(",")) {
            stylesAddedTxtArea.setText(text.substring(0, text.length() - 1) + " ");
        }
        stylesAddedTxtArea.append(" #" + IDsComboBox.getSelectedItem().toString() + ",");
    }//GEN-LAST:event_IDElementChldBtnActionPerformed

    private void ClassElementChldBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClassElementChldBtnActionPerformed
        String text = stylesAddedTxtArea.getText().trim();
        // if(pseudoClasses.contains(text.))
        if (text.endsWith(",")) {
            stylesAddedTxtArea.setText(text.substring(0, text.length() - 1) + " ");
        }
        if (!pseudoClasses.contains(ClassCombo.getSelectedItem().toString())) {
            stylesAddedTxtArea.append(" ." + ClassCombo.getSelectedItem().toString() + ",");
        } else {
            stylesAddedTxtArea.append(ClassCombo.getSelectedItem().toString() + ",");
        }
    }//GEN-LAST:event_ClassElementChldBtnActionPerformed

    private void ClassComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClassComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ClassComboActionPerformed

    private void IDsComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_IDsComboBoxItemStateChanged
        if (IDsComboBox.getSelectedItem() != null) {
            IDAddsprtBtn.setEnabled(true);
            IDsPresent = true;
            String stylesadded = stylesAddedTxtArea.getText();
            if (stylesadded.equals("") || stylesadded.trim().length() == 0 || stylesadded == null)
           ; else {
                IDElementChldBtn.setEnabled(true);
            }
        }
    }//GEN-LAST:event_IDsComboBoxItemStateChanged

    private void ClassComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ClassComboItemStateChanged
        if (ClassCombo.getSelectedItem() != null) {
            if (!ClassCombo.getSelectedItem().toString().startsWith(":")) {
                ClassElementSprtBtn.setEnabled(true);
            }
            if (ClassCombo.getSelectedItem().toString().startsWith(":")) {
                ClassElementSprtBtn.setEnabled(false);
            }
            classesPresent = true;
            String stylesadded = stylesAddedTxtArea.getText();
            if (stylesadded.equals("") || stylesadded.trim().length() == 0 || stylesadded == null)
           ; else {
                ClassElementChldBtn.setEnabled(true);
            }
        }
    }//GEN-LAST:event_ClassComboItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        AllStylesTxtArea.setText("");
        int length = ruleList.size();
        if (length == 0) {
            JOptionPane.showMessageDialog(this, "No rules available to write");
        } else {

            JFileChooser fileSelector = new JFileChooser();

            int fileChosen = fileSelector.showOpenDialog(this);

            if (fileChosen == JFileChooser.APPROVE_OPTION) {
                PrintWriter writer = null;
                try {
                    File file = fileSelector.getSelectedFile();
                    writer = new PrintWriter(file.getAbsolutePath());
                    for (int i = 0; i < length; i++) {
                        writer.write(ruleList.get(i).toString() + System.getProperty("line.separator"));
                    }
                    JOptionPane.showMessageDialog(this, "file created!");
                    link.setText(file.getAbsolutePath());
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(CreateWindow.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this, "Error! cannot write to file !");
                } finally {
                    writer.close();
                    ruleList.clear();
                }

            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void IDsComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDsComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IDsComboBoxActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        MainClass.main(null);
        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed
    public void fillTagsCombo(boolean flag) throws FileNotFoundException, IOException {
        if (!flag) {


            InputStream Tags = null;
            try {
                // JOptionPane.showMessageDialog(this,"path: "+CreateWindow.class.getResourceAsStream("/Resources/htmlTags.properties").);
                Tags = CreateWindow.class.getResourceAsStream("/Resources/htmlTags.properties");
                if (Tags == null) {
                    throw new FileNotFoundException();
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "File Not Found!!");
                e.printStackTrace();
                System.exit(1);
            }


            BufferedReader in = new BufferedReader(new InputStreamReader(Tags));
            String line = null;

            StringBuilder responseData = new StringBuilder();


            HTMLTags.removeAllItems();
            while ((line = in.readLine()) != null) {
                HTMLTags.addItem(line);
            }

        } else {
            HTMLTags.removeAllItems();
            for (int i = 0; i < Elements.size(); i++) {
                HTMLTags.addItem(Elements.get(i));

            }
            for (int i = 0; i < IDs.size(); i++) {
                IDsComboBox.addItem(IDs.get(i));

            }
        }
    }

    public void populateClassesCombo(boolean flag) throws FileNotFoundException, IOException {
        pseudoClasses = new ArrayList();
        InputStream Tags = null;
        try {
            Tags = CreateWindow.class.getResourceAsStream("/Resources/CSSPseudoClasses.txt");
            if (Tags == null) {
                throw new FileNotFoundException();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "File Not Found!!");
            e.printStackTrace();
            System.exit(1);
        }
        ClassCombo.removeAllItems();
         BufferedReader in = new BufferedReader(new InputStreamReader(Tags));
            String line = null;

            StringBuilder responseData = new StringBuilder();

        while ((line = in.readLine()) != null) {
          
            ClassCombo.addItem(line);
            pseudoClasses.add(line);
        }
        if (flag) {
            for (int i = 0; i < classes.size(); i++) {
                ClassCombo.addItem(classes.get(i));

            }
        }
    }

    public void fillClassesCombo() {


        ClassCombo.addItem(classes.get(classes.size() - 1).substring(1));

    }

    public void fillIDsCombo() {


        IDsComboBox.addItem(IDs.get(IDs.size() - 1).substring(1));

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        if (args == null) {
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new CreateWindow().setVisible(true);
                }
            });
        } else {
            IDs = MainClass.getIDs();
            Elements = MainClass.getElements();
            classes = MainClass.getClasses();
            dataLoaded = true;
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new CreateWindow().setVisible(true);
                }
            });
        }
    }

    public static void addRuleListElement(StyleRule ruleList) {
        CreateWindow.ruleList.add(ruleList);
    }
    private static boolean dataLoaded = false;
    private ArrayList<String> pseudoClasses;
    private boolean stylePresent = false;
    private boolean classesPresent = false;
    private boolean IDsPresent = false;
    private ButtonGroup group;
    private static ArrayList<String> classes;
    private static ArrayList<String> IDs;
    private static ArrayList<String> Elements;
    private static boolean CreateWindowFlag;
    private static ArrayList<StyleRule> ruleList;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JTextArea AllStylesTxtArea;
    private javax.swing.JComboBox ClassCombo;
    private javax.swing.JButton ClassElementChldBtn;
    private javax.swing.JButton ClassElementSprtBtn;
    private javax.swing.JRadioButton ClassRadio;
    private javax.swing.JButton HTMLElementChldBtn;
    private javax.swing.JButton HTMLElementSprtBtn;
    private javax.swing.JComboBox HTMLTags;
    private javax.swing.JButton IDAddsprtBtn;
    private javax.swing.JButton IDClassCreateBtn;
    private javax.swing.JTextField IDClassCreateTxtBox;
    private javax.swing.JButton IDElementChldBtn;
    private javax.swing.JRadioButton IDRadio;
    private javax.swing.JComboBox IDsComboBox;
    private javax.swing.JButton createNewRuleBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel link;
    private javax.swing.JTextArea stylesAddedTxtArea;
    // End of variables declaration//GEN-END:variables
}
